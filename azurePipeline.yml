# This pipeline should be triggered by every local branches, but should not be used for external PRs.
# In fact, this pipeline is able to use some of our secrets to push images on dockerhub and deploy on k8s.
pr: none
trigger:
  branches:
    include:
    - '*'


stages:
- stage: buildWheels
  displayName: Build Wheel Packages
  variables:
    CIBW_TEST_REQUIRES: 'pytest pytest-cov pytest-timeout hypothesis codecov'
    CIBW_TEST_COMMAND: 'pytest {project}/tests --cov={project} --junitxml={project}/testoutput.xml --cov-report=xml:{project}/coverage.xml --cov-report=html:{project}/htmlcov -W ignore::DeprecationWarning'
    CIBW_BEFORE_BUILD: 'python -m pip install --upgrade pip && pip install wheel setuptools -r requirements.txt && pip install -e .'
    CIBW_BEFORE_BUILD_LINUX: 'yum install -y libffi-dev atlas-devel && pip install -e . && python setup.py build'
    CIBW_ENVIRONMENT_MACOS: 'CC="clang" CXXFLAGS="-stdlib=libc++ -mssse3 -mpopcnt"'
    # Only build for Python36+, and x64 arch
    CIBW_BUILD: 'cp37-* cp36-*'
    CIBW_SKIP: '*-win32 *-manylinux1_i686'
  jobs:
  - job: linux_37
    displayName: Linux + Python3.7
    pool: {vmImage: 'Ubuntu-16.04'}
    variables:
      CIBW_BUILD: 'cp37-*'
    steps:
    - template: .azurePipeline/cibuildwheel_steps.yml
      parameters:
        pythonVersion: '3.7'
  - job: linux_36
    displayName: Linux + Python3.6
    pool: {vmImage: 'Ubuntu-16.04'}
    variables:
      CIBW_BUILD: 'cp36-*'
    steps:
    - template: .azurePipeline/cibuildwheel_steps.yml
      parameters:
        pythonVersion: '3.6'
#- stage: buildMacOSWheels
#  displayName: Build macos Wheel Packages

  - job: macos_37
    displayName: MacOS + Python3.7
    pool: {vmImage: 'macOS-10.13'}
    variables:
      CIBW_BUILD: 'cp37-*'
    steps:
    - template: .azurePipeline/cibuildwheel_steps.yml
      parameters:
        pythonVersion: '3.7'

  - job: macos_36
    displayName: MacOS + Python3.6
    pool: {vmImage: 'macOS-10.13'}
    variables:
      CIBW_BUILD: 'cp36-*'
    steps:
    - template: .azurePipeline/cibuildwheel_steps.yml
      parameters:
        pythonVersion: '3.6'

- stage: build_and_test
  displayName: Build and unit test
  dependsOn: []
  jobs:
  - job:
    displayName: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    strategy:
      matrix:
        Python3.6 clang:
          compiler: clang
          pythonVersion: '3.6'

        Python3.7 clang:
          compiler: clang
          pythonVersion: '3.7'

        Python3.6 gcc:
          compiler: gcc
          pythonVersion: '3.6'

        Python3.7 gcc:
          compiler: gcc
          pythonVersion: '3.7'

    steps:
    - script: |
        sudo apt update
        sudo apt install $(compiler)
      displayName: 'Install compiler'
    - template: .azurePipeline/python_init_package_install_steps.yml
      parameters:
        compiler: $(compiler)
        pythonVersion: $(pythonVersion)
        operatingSystem: 'ubuntu-16.04'

  - job:
    displayName: OSX
    pool:
      vmImage: 'macos-10.13'
    strategy:
      matrix:
        Python3.6 clang:
          compiler: clang
          pythonVersion: '3.6'

        Python3.7 clang:
          compiler: clang
          pythonVersion: '3.7'

    steps:
    - template: .azurePipeline/python_init_package_install_steps.yml
      parameters:
        compiler: $(compiler)
        pythonVersion: $(pythonVersion)
        operatingSystem: 'macos-10.13'
